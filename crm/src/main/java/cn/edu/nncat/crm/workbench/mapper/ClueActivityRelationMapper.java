package cn.edu.nncat.crm.workbench.mapper;

import cn.edu.nncat.crm.workbench.domain.ClueActivityRelation;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface ClueActivityRelationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sun Nov 13 15:23:44 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sun Nov 13 15:23:44 CST 2022
     */
    int insert(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sun Nov 13 15:23:44 CST 2022
     */
    int insertSelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sun Nov 13 15:23:44 CST 2022
     */
    ClueActivityRelation selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sun Nov 13 15:23:44 CST 2022
     */
    int updateByPrimaryKeySelective(ClueActivityRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_activity_relation
     *
     * @mbggenerated Sun Nov 13 15:23:44 CST 2022
     */
    int updateByPrimaryKey(ClueActivityRelation record);

    /**
     * 保存创建的线索市场活动关系
     * 自己写的用for循环去插入多个关系，不太行
     * @param clueActivityRelation
     * @return
     */
    //int insertClueActivityRelationByActId(ClueActivityRelation clueActivityRelation);

    /**
     * 保存创建的市场活动
     * @param clueActivityRelationList
     * @return
     */
    int insertClueActivityRelationByList(List<ClueActivityRelation> clueActivityRelationList);

    int deleteClueActivityRelationByClueIdActId(ClueActivityRelation clueActivityRelation);

    /**
     * 根据线索id查询线索和市场活动的关联关系
     * @param clueId
     * @return
     */
    List<ClueActivityRelation> selectClueActivityRelationByClueId(String clueId);

    int deleteClueActivityRelationByClueId(String clueId);
}